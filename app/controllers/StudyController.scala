package controllers

import play.api.mvc._

import javax.inject._

@Singleton
class StudyController @Inject()(val controllerComponents: ControllerComponents) extends BaseController {

  def study = Action { _ =>
    // 2. 型
    // 2-7. 文字列リテラルの強化版

    // すっかりお馴染みの`"`で囲った文字列リテラルには、
    // 便利な亜種や、特殊な記法がございます。
    // 使うことが多いものをいくつか紹介します。

    // ①s補完子つき
    // `s""`こんなので囲った文字の中では、
    // さらに`${}`という記法を利用できます。
    // この中では式を記述できまして、その計算結果が文字列リテラルに埋め込まれます。
    val sString = s"1 + 1 = ${1 + 1}" // "1 + 1 = 2"
    // 上では`${}`の中がInt型になっていますが、
    // 任意の型で`.toString`をs補完子さんがこっそり補完してくれています。

    // ②`"""`3連の2重引用符
    // この中では`"`が文字として使えたり、改行を含むことができます。
    // `"`だけのやとあかんかったんやで。
    val tripleString =
    """2重引用符(")が文字として使えます！
      改行もできちゃいます。"""

    // ③stripMargin
    // わかりづらいのですが、直前の例では、
    // 実は、2行目の"改行も..."の前部分のスペースも文字列として含まれてしまっています。
    // つまり"      改行もできちゃいます。"こうなっているわけです。
    // かといって、以下は見た目がガッタガタでださい・・・🙃
    val tripleString2 =
    """2重引用符(")が文字として使えます！
改行もできちゃいます。"""
    // と、そんな悩めるあなたには以下の書き方をどうぞ。
    val tripleString3 =
      """2重引用符(")が文字として使えます！
        |改行もできちゃいます。""".stripMargin
    // `|`という記号を2行目以降の行頭につけて、
    // 最後に`.stripMargin`をつけると、`|`とそれまでの半角スペースが消え去った文字列を取得できます。やったZE🌟

    // ④エスケープシーケンス
    // いつもの`"`だけで③と同じ内容を記述することもできるんやで。
    // そのためには、以下のようにmacだとバックスラッシュ・windowsだと円マーク(¥)+記号という表記を使います。
    val normalString = "2重引用符(\")が文字として使えます！\n改行もできちゃいます。"
    // こういった表記をエスケープシーケンスと言って、
    // 組み合わせる記号によって、いろんな特殊な文字を表現できます。
    // 他にもたくさんありますが、必要に応じて小出ししていきたいと思います。

    // ⑤s補完子と3連の組み合わせ
    Ok(
      s"""ブラウザで表示するためのHTMLは、
         |普通に改行しても改行されないのでbrタグを使う必要があります。<br>
         |ちなみに、以下のように変数名だけ単体で指定する場合は`{}`を省略できちゃいます。<br>
         |sString => "$sString"<br>
         |s補完子の機能で直感的に文字列を組み立てることができて嬉しいという話でした👻
         |""".stripMargin).as(HTML)

  }

}
