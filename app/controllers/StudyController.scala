package controllers

import play.api.mvc._

import javax.inject._

@Singleton
class StudyController @Inject()(val controllerComponents: ControllerComponents) extends BaseController {

  def study = Action { _ =>
    // 6. クラス
    // 6-2. フィールド

    // クラスでは、クラスパラメータ(クラス定義のクラス名のすぐ後の丸括弧の中のフィールド群)に
    // 指定した値以外も、追加で値を保持することができます。
    // 例えば前回のCoinsに合計値を保持する変数を追加してみましょう。

    class Coins(val fiveHundred: Int,
                val oneHundred: Int,
                val fifty: Int,
                val ten: Int,
                val five: Int,
                val one: Int) { // 追加の`{}`括弧を書きます。
      // 中に追加のフィールドを定義できます。
      // 合計値を`sum`という名前で保持しています。
      // ※これはnewのタイミングで計算されます。
      val sum: Int = (500 * fiveHundred) + (100 * oneHundred) + (50 * fifty) + (10 * ten) + (5 * five) + one
    }

    // ※前回でも軽く触れましたが、クラスパラメータ内の変数も、
    // それ以外のクラス内の変数もあわせてフィールドと呼んだりします。
    // 他にもメンバ変数と表現したりもします。

    // 【補足事項】
    // より抽象的な呼び方になりますが、
    // 単に"メンバ"・"プロパティ"などと言ったりもします。
    // 厳密な言葉の定義はプログラミング言語や組織によって方言もあるので、
    // 一概には捉えにくいのですが、
    // 他のプログラマと話す際は、前後の文脈等から、
    // 『この人は今はこの言葉をフィールドに対して使ってるんだな。』
    // といった脳内変換が必要な場面も出てくるかもしれません。
    // もちろん逆に、相手が思う言葉の定義と違う使い方を自分がしている可能性もあるので、
    // 大事な場面では、誤解が発生しないように、注意して話す必要があるかもしれません。
    // 【補足事項 終わり】

    // クラスパラメータにないフィールドは、
    // newでインスタンスを生成する時には指定しませんが、
    // 値をとってくる時は同様に`.`を付けて参照します。
    // 例を見ていきましょう。
    val coins1 = new Coins(1, 1, 1, 1, 1, 1)
    val sumCoins1 = coins1.sum // `.`で参照
    // (500 * 1) + (100 * 1) + (50 * 1) + (10 * 1) + (5 * 1) + 1 = 666

    val coins2 = new Coins(2, 2, 2, 2, 2, 2)
    val sumCoins2 = coins2.sum
    // (500 * 2) + (100 * 2) + (50 * 2) + (10 * 2) + (5 * 2) + 2 = 1332
    
    // クラス定義とnewによるインスタンス生成の関係が、
    // 捉えづらい方も多いと思います。
    // 上記の例のように、coins1とcoins2は同じクラスからnewしていますが、
    // 指定されたクラスパラメータによって、中に保持している値は別ものになります。
    
    // 余計に混乱させてしまう可能性もありますが、
    // クッキーを焼く時の、金型がクラスで、
    // クッキー自体が、newで生成されるインスタンスのような感じです。
    // 金型が同じでも、クッキーは別ですし、
    // 生地によって、状態も異なるような感じです🍪
    
    Ok(
      s"""
         |sumCoins1 = $sumCoins1<br>
         |sumCoins2 = $sumCoins2<br>
         |""".stripMargin).as(HTML)

  }

}
